apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
        multiDexEnabled true
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            debuggable false
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        // Not allowed with multidex
        incremental false
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }
}

dependencies {

    compile project(':common')
    compile project(':domain')
    compile project(':data')

    // Google
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.android.gms:play-services:7.8.0'
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:support-v4:23.0.0'

    // Butter knife
    compile 'com.jakewharton:butterknife:7.0.1'

    // Toasteroid
    compile 'com.github.marcohc:toasteroid:1.0.1'

    // Calligraphy
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'

    // Leak canary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Mosby
    compile 'com.hannesdorfmann.mosby:core:1.2.0'
    compile 'com.hannesdorfmann.mosby:mvp:1.2.0'
    apt 'frankiesardo:icepick-processor:3.0.2'
    apt 'com.hannesdorfmann.fragmentargs:processor:2.1.2'

    // Crashlitics
    compile('com.crashlytics.sdk.android:crashlytics:2.3.2@aar') {
        transitive = true;
    }

    // Animations library
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'

    // Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'

    // View pager indicator
    compile 'fr.avianey.com.viewpagerindicator:library:2.4.1@aar'

    // Espresso
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support:support-annotations:23.0.0'

}